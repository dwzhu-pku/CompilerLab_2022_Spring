Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ZKHY
    ZKHZ

Grammar

Rule 0     S' -> Function
Rule 1     Function -> Type IDENT XKHZ XKHY CompoundStmt
Rule 2     Function -> Type IDENT XKHZ ArgList XKHY CompoundStmt
Rule 3     ArgList -> Arg
Rule 4     ArgList -> ArgList COMMA Arg
Rule 5     Arg -> Type IDENT
Rule 6     Declaration -> Type IdentList SEMI
Rule 7     Type -> INT
Rule 8     IdentList -> IdentList COMMA IDENT
Rule 9     IdentList -> IDENT
Rule 10    Stmt -> ForStmt
Rule 11    Stmt -> WhileStmt
Rule 12    Stmt -> Expr SEMI
Rule 13    Stmt -> IfStmt
Rule 14    Stmt -> CompoundStmt
Rule 15    Stmt -> Declaration
Rule 16    Stmt -> SEMI
Rule 17    ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt
Rule 18    OptExpr -> Expr
Rule 19    OptExpr -> <empty>
Rule 20    WhileStmt -> WHILE XKHZ Expr XKHY Stmt
Rule 21    IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart
Rule 22    ElsePart -> ELSE Stmt
Rule 23    ElsePart -> <empty>
Rule 24    CompoundStmt -> DKHZ StmtList DKHY
Rule 25    StmtList -> StmtList Stmt
Rule 26    StmtList -> <empty>
Rule 27    Expr -> IDENT ASSIGN Expr
Rule 28    Expr -> Rvalue
Rule 29    Rvalue -> Rvalue Compare Mag
Rule 30    Rvalue -> Mag
Rule 31    Compare -> EQ
Rule 32    Compare -> LT
Rule 33    Compare -> GT
Rule 34    Compare -> LE
Rule 35    Compare -> GE
Rule 36    Compare -> NE
Rule 37    Mag -> Mag ADD Term
Rule 38    Mag -> Mag SUB Term
Rule 39    Mag -> Term
Rule 40    Term -> Term MUL Factor
Rule 41    Term -> Term DIV Factor
Rule 42    Term -> Factor
Rule 43    Factor -> XKHZ Expr XKHY
Rule 44    Factor -> SUB Factor
Rule 45    Factor -> ADD Factor
Rule 46    Factor -> IDENT
Rule 47    Factor -> NUMBER

Terminals, with rules where they appear

ADD                  : 37 45
ASSIGN               : 27
COMMA                : 4 8
DIV                  : 41
DKHY                 : 24
DKHZ                 : 24
ELSE                 : 22
EQ                   : 31
FOR                  : 17
GE                   : 35
GT                   : 33
IDENT                : 1 2 5 8 9 27 46
IF                   : 21
INT                  : 7
LE                   : 34
LT                   : 32
MUL                  : 40
NE                   : 36
NUMBER               : 47
SEMI                 : 6 12 16 17 17
SUB                  : 38 44
WHILE                : 20
XKHY                 : 1 2 17 20 21 43
XKHZ                 : 1 2 17 20 21 43
ZKHY                 : 
ZKHZ                 : 
error                : 

Nonterminals, with rules where they appear

Arg                  : 3 4
ArgList              : 2 4
Compare              : 29
CompoundStmt         : 1 2 14
Declaration          : 15
ElsePart             : 21
Expr                 : 12 18 20 21 27 43
Factor               : 40 41 42 44 45
ForStmt              : 10
Function             : 0
IdentList            : 6 8
IfStmt               : 13
Mag                  : 29 30 37 38
OptExpr              : 17 17 17
Rvalue               : 28 29
Stmt                 : 17 20 21 22 25
StmtList             : 24 25
Term                 : 37 38 39 40 41
Type                 : 1 2 5 6
WhileStmt            : 11

Parsing method: LALR

state 0

    (0) S' -> . Function
    (1) Function -> . Type IDENT XKHZ XKHY CompoundStmt
    (2) Function -> . Type IDENT XKHZ ArgList XKHY CompoundStmt
    (7) Type -> . INT

    INT             shift and go to state 3

    Function                       shift and go to state 1
    Type                           shift and go to state 2

state 1

    (0) S' -> Function .



state 2

    (1) Function -> Type . IDENT XKHZ XKHY CompoundStmt
    (2) Function -> Type . IDENT XKHZ ArgList XKHY CompoundStmt

    IDENT           shift and go to state 4


state 3

    (7) Type -> INT .

    IDENT           reduce using rule 7 (Type -> INT .)


state 4

    (1) Function -> Type IDENT . XKHZ XKHY CompoundStmt
    (2) Function -> Type IDENT . XKHZ ArgList XKHY CompoundStmt

    XKHZ            shift and go to state 5


state 5

    (1) Function -> Type IDENT XKHZ . XKHY CompoundStmt
    (2) Function -> Type IDENT XKHZ . ArgList XKHY CompoundStmt
    (3) ArgList -> . Arg
    (4) ArgList -> . ArgList COMMA Arg
    (5) Arg -> . Type IDENT
    (7) Type -> . INT

    XKHY            shift and go to state 7
    INT             shift and go to state 3

    Type                           shift and go to state 6
    ArgList                        shift and go to state 8
    Arg                            shift and go to state 9

state 6

    (5) Arg -> Type . IDENT

    IDENT           shift and go to state 10


state 7

    (1) Function -> Type IDENT XKHZ XKHY . CompoundStmt
    (24) CompoundStmt -> . DKHZ StmtList DKHY

    DKHZ            shift and go to state 12

    CompoundStmt                   shift and go to state 11

state 8

    (2) Function -> Type IDENT XKHZ ArgList . XKHY CompoundStmt
    (4) ArgList -> ArgList . COMMA Arg

    XKHY            shift and go to state 13
    COMMA           shift and go to state 14


state 9

    (3) ArgList -> Arg .

    XKHY            reduce using rule 3 (ArgList -> Arg .)
    COMMA           reduce using rule 3 (ArgList -> Arg .)


state 10

    (5) Arg -> Type IDENT .

    XKHY            reduce using rule 5 (Arg -> Type IDENT .)
    COMMA           reduce using rule 5 (Arg -> Type IDENT .)


state 11

    (1) Function -> Type IDENT XKHZ XKHY CompoundStmt .

    $end            reduce using rule 1 (Function -> Type IDENT XKHZ XKHY CompoundStmt .)


state 12

    (24) CompoundStmt -> DKHZ . StmtList DKHY
    (25) StmtList -> . StmtList Stmt
    (26) StmtList -> .

    DKHY            reduce using rule 26 (StmtList -> .)
    SEMI            reduce using rule 26 (StmtList -> .)
    FOR             reduce using rule 26 (StmtList -> .)
    WHILE           reduce using rule 26 (StmtList -> .)
    IDENT           reduce using rule 26 (StmtList -> .)
    IF              reduce using rule 26 (StmtList -> .)
    DKHZ            reduce using rule 26 (StmtList -> .)
    INT             reduce using rule 26 (StmtList -> .)
    XKHZ            reduce using rule 26 (StmtList -> .)
    SUB             reduce using rule 26 (StmtList -> .)
    ADD             reduce using rule 26 (StmtList -> .)
    NUMBER          reduce using rule 26 (StmtList -> .)

    StmtList                       shift and go to state 15

state 13

    (2) Function -> Type IDENT XKHZ ArgList XKHY . CompoundStmt
    (24) CompoundStmt -> . DKHZ StmtList DKHY

    DKHZ            shift and go to state 12

    CompoundStmt                   shift and go to state 16

state 14

    (4) ArgList -> ArgList COMMA . Arg
    (5) Arg -> . Type IDENT
    (7) Type -> . INT

    INT             shift and go to state 3

    Arg                            shift and go to state 17
    Type                           shift and go to state 6

state 15

    (24) CompoundStmt -> DKHZ StmtList . DKHY
    (25) StmtList -> StmtList . Stmt
    (10) Stmt -> . ForStmt
    (11) Stmt -> . WhileStmt
    (12) Stmt -> . Expr SEMI
    (13) Stmt -> . IfStmt
    (14) Stmt -> . CompoundStmt
    (15) Stmt -> . Declaration
    (16) Stmt -> . SEMI
    (17) ForStmt -> . FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt
    (20) WhileStmt -> . WHILE XKHZ Expr XKHY Stmt
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (21) IfStmt -> . IF XKHZ Expr XKHY Stmt ElsePart
    (24) CompoundStmt -> . DKHZ StmtList DKHY
    (6) Declaration -> . Type IdentList SEMI
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (7) Type -> . INT
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    DKHY            shift and go to state 18
    SEMI            shift and go to state 23
    FOR             shift and go to state 27
    WHILE           shift and go to state 29
    IDENT           shift and go to state 30
    IF              shift and go to state 32
    DKHZ            shift and go to state 12
    INT             shift and go to state 3
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    Stmt                           shift and go to state 19
    ForStmt                        shift and go to state 20
    WhileStmt                      shift and go to state 21
    Expr                           shift and go to state 22
    IfStmt                         shift and go to state 24
    CompoundStmt                   shift and go to state 25
    Declaration                    shift and go to state 26
    Rvalue                         shift and go to state 31
    Type                           shift and go to state 33
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 16

    (2) Function -> Type IDENT XKHZ ArgList XKHY CompoundStmt .

    $end            reduce using rule 2 (Function -> Type IDENT XKHZ ArgList XKHY CompoundStmt .)


state 17

    (4) ArgList -> ArgList COMMA Arg .

    XKHY            reduce using rule 4 (ArgList -> ArgList COMMA Arg .)
    COMMA           reduce using rule 4 (ArgList -> ArgList COMMA Arg .)


state 18

    (24) CompoundStmt -> DKHZ StmtList DKHY .

    $end            reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    DKHY            reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    SEMI            reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    FOR             reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    WHILE           reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    IDENT           reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    IF              reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    DKHZ            reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    INT             reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    XKHZ            reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    SUB             reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    ADD             reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    NUMBER          reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)
    ELSE            reduce using rule 24 (CompoundStmt -> DKHZ StmtList DKHY .)


state 19

    (25) StmtList -> StmtList Stmt .

    DKHY            reduce using rule 25 (StmtList -> StmtList Stmt .)
    SEMI            reduce using rule 25 (StmtList -> StmtList Stmt .)
    FOR             reduce using rule 25 (StmtList -> StmtList Stmt .)
    WHILE           reduce using rule 25 (StmtList -> StmtList Stmt .)
    IDENT           reduce using rule 25 (StmtList -> StmtList Stmt .)
    IF              reduce using rule 25 (StmtList -> StmtList Stmt .)
    DKHZ            reduce using rule 25 (StmtList -> StmtList Stmt .)
    INT             reduce using rule 25 (StmtList -> StmtList Stmt .)
    XKHZ            reduce using rule 25 (StmtList -> StmtList Stmt .)
    SUB             reduce using rule 25 (StmtList -> StmtList Stmt .)
    ADD             reduce using rule 25 (StmtList -> StmtList Stmt .)
    NUMBER          reduce using rule 25 (StmtList -> StmtList Stmt .)


state 20

    (10) Stmt -> ForStmt .

    DKHY            reduce using rule 10 (Stmt -> ForStmt .)
    SEMI            reduce using rule 10 (Stmt -> ForStmt .)
    FOR             reduce using rule 10 (Stmt -> ForStmt .)
    WHILE           reduce using rule 10 (Stmt -> ForStmt .)
    IDENT           reduce using rule 10 (Stmt -> ForStmt .)
    IF              reduce using rule 10 (Stmt -> ForStmt .)
    DKHZ            reduce using rule 10 (Stmt -> ForStmt .)
    INT             reduce using rule 10 (Stmt -> ForStmt .)
    XKHZ            reduce using rule 10 (Stmt -> ForStmt .)
    SUB             reduce using rule 10 (Stmt -> ForStmt .)
    ADD             reduce using rule 10 (Stmt -> ForStmt .)
    NUMBER          reduce using rule 10 (Stmt -> ForStmt .)
    ELSE            reduce using rule 10 (Stmt -> ForStmt .)


state 21

    (11) Stmt -> WhileStmt .

    DKHY            reduce using rule 11 (Stmt -> WhileStmt .)
    SEMI            reduce using rule 11 (Stmt -> WhileStmt .)
    FOR             reduce using rule 11 (Stmt -> WhileStmt .)
    WHILE           reduce using rule 11 (Stmt -> WhileStmt .)
    IDENT           reduce using rule 11 (Stmt -> WhileStmt .)
    IF              reduce using rule 11 (Stmt -> WhileStmt .)
    DKHZ            reduce using rule 11 (Stmt -> WhileStmt .)
    INT             reduce using rule 11 (Stmt -> WhileStmt .)
    XKHZ            reduce using rule 11 (Stmt -> WhileStmt .)
    SUB             reduce using rule 11 (Stmt -> WhileStmt .)
    ADD             reduce using rule 11 (Stmt -> WhileStmt .)
    NUMBER          reduce using rule 11 (Stmt -> WhileStmt .)
    ELSE            reduce using rule 11 (Stmt -> WhileStmt .)


state 22

    (12) Stmt -> Expr . SEMI

    SEMI            shift and go to state 40


state 23

    (16) Stmt -> SEMI .

    DKHY            reduce using rule 16 (Stmt -> SEMI .)
    SEMI            reduce using rule 16 (Stmt -> SEMI .)
    FOR             reduce using rule 16 (Stmt -> SEMI .)
    WHILE           reduce using rule 16 (Stmt -> SEMI .)
    IDENT           reduce using rule 16 (Stmt -> SEMI .)
    IF              reduce using rule 16 (Stmt -> SEMI .)
    DKHZ            reduce using rule 16 (Stmt -> SEMI .)
    INT             reduce using rule 16 (Stmt -> SEMI .)
    XKHZ            reduce using rule 16 (Stmt -> SEMI .)
    SUB             reduce using rule 16 (Stmt -> SEMI .)
    ADD             reduce using rule 16 (Stmt -> SEMI .)
    NUMBER          reduce using rule 16 (Stmt -> SEMI .)
    ELSE            reduce using rule 16 (Stmt -> SEMI .)


state 24

    (13) Stmt -> IfStmt .

    DKHY            reduce using rule 13 (Stmt -> IfStmt .)
    SEMI            reduce using rule 13 (Stmt -> IfStmt .)
    FOR             reduce using rule 13 (Stmt -> IfStmt .)
    WHILE           reduce using rule 13 (Stmt -> IfStmt .)
    IDENT           reduce using rule 13 (Stmt -> IfStmt .)
    IF              reduce using rule 13 (Stmt -> IfStmt .)
    DKHZ            reduce using rule 13 (Stmt -> IfStmt .)
    INT             reduce using rule 13 (Stmt -> IfStmt .)
    XKHZ            reduce using rule 13 (Stmt -> IfStmt .)
    SUB             reduce using rule 13 (Stmt -> IfStmt .)
    ADD             reduce using rule 13 (Stmt -> IfStmt .)
    NUMBER          reduce using rule 13 (Stmt -> IfStmt .)
    ELSE            reduce using rule 13 (Stmt -> IfStmt .)


state 25

    (14) Stmt -> CompoundStmt .

    DKHY            reduce using rule 14 (Stmt -> CompoundStmt .)
    SEMI            reduce using rule 14 (Stmt -> CompoundStmt .)
    FOR             reduce using rule 14 (Stmt -> CompoundStmt .)
    WHILE           reduce using rule 14 (Stmt -> CompoundStmt .)
    IDENT           reduce using rule 14 (Stmt -> CompoundStmt .)
    IF              reduce using rule 14 (Stmt -> CompoundStmt .)
    DKHZ            reduce using rule 14 (Stmt -> CompoundStmt .)
    INT             reduce using rule 14 (Stmt -> CompoundStmt .)
    XKHZ            reduce using rule 14 (Stmt -> CompoundStmt .)
    SUB             reduce using rule 14 (Stmt -> CompoundStmt .)
    ADD             reduce using rule 14 (Stmt -> CompoundStmt .)
    NUMBER          reduce using rule 14 (Stmt -> CompoundStmt .)
    ELSE            reduce using rule 14 (Stmt -> CompoundStmt .)


state 26

    (15) Stmt -> Declaration .

    DKHY            reduce using rule 15 (Stmt -> Declaration .)
    SEMI            reduce using rule 15 (Stmt -> Declaration .)
    FOR             reduce using rule 15 (Stmt -> Declaration .)
    WHILE           reduce using rule 15 (Stmt -> Declaration .)
    IDENT           reduce using rule 15 (Stmt -> Declaration .)
    IF              reduce using rule 15 (Stmt -> Declaration .)
    DKHZ            reduce using rule 15 (Stmt -> Declaration .)
    INT             reduce using rule 15 (Stmt -> Declaration .)
    XKHZ            reduce using rule 15 (Stmt -> Declaration .)
    SUB             reduce using rule 15 (Stmt -> Declaration .)
    ADD             reduce using rule 15 (Stmt -> Declaration .)
    NUMBER          reduce using rule 15 (Stmt -> Declaration .)
    ELSE            reduce using rule 15 (Stmt -> Declaration .)


state 27

    (17) ForStmt -> FOR . XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt

    XKHZ            shift and go to state 41


state 28

    (43) Factor -> XKHZ . Expr XKHY
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    IDENT           shift and go to state 30
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    Expr                           shift and go to state 42
    Rvalue                         shift and go to state 31
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 29

    (20) WhileStmt -> WHILE . XKHZ Expr XKHY Stmt

    XKHZ            shift and go to state 43


state 30

    (27) Expr -> IDENT . ASSIGN Expr
    (46) Factor -> IDENT .

    ASSIGN          shift and go to state 44
    MUL             reduce using rule 46 (Factor -> IDENT .)
    DIV             reduce using rule 46 (Factor -> IDENT .)
    ADD             reduce using rule 46 (Factor -> IDENT .)
    SUB             reduce using rule 46 (Factor -> IDENT .)
    EQ              reduce using rule 46 (Factor -> IDENT .)
    LT              reduce using rule 46 (Factor -> IDENT .)
    GT              reduce using rule 46 (Factor -> IDENT .)
    LE              reduce using rule 46 (Factor -> IDENT .)
    GE              reduce using rule 46 (Factor -> IDENT .)
    NE              reduce using rule 46 (Factor -> IDENT .)
    SEMI            reduce using rule 46 (Factor -> IDENT .)
    XKHY            reduce using rule 46 (Factor -> IDENT .)


state 31

    (28) Expr -> Rvalue .
    (29) Rvalue -> Rvalue . Compare Mag
    (31) Compare -> . EQ
    (32) Compare -> . LT
    (33) Compare -> . GT
    (34) Compare -> . LE
    (35) Compare -> . GE
    (36) Compare -> . NE

    SEMI            reduce using rule 28 (Expr -> Rvalue .)
    XKHY            reduce using rule 28 (Expr -> Rvalue .)
    EQ              shift and go to state 46
    LT              shift and go to state 47
    GT              shift and go to state 48
    LE              shift and go to state 49
    GE              shift and go to state 50
    NE              shift and go to state 51

    Compare                        shift and go to state 45

state 32

    (21) IfStmt -> IF . XKHZ Expr XKHY Stmt ElsePart

    XKHZ            shift and go to state 52


state 33

    (6) Declaration -> Type . IdentList SEMI
    (8) IdentList -> . IdentList COMMA IDENT
    (9) IdentList -> . IDENT

    IDENT           shift and go to state 54

    IdentList                      shift and go to state 53

state 34

    (30) Rvalue -> Mag .
    (37) Mag -> Mag . ADD Term
    (38) Mag -> Mag . SUB Term

    EQ              reduce using rule 30 (Rvalue -> Mag .)
    LT              reduce using rule 30 (Rvalue -> Mag .)
    GT              reduce using rule 30 (Rvalue -> Mag .)
    LE              reduce using rule 30 (Rvalue -> Mag .)
    GE              reduce using rule 30 (Rvalue -> Mag .)
    NE              reduce using rule 30 (Rvalue -> Mag .)
    SEMI            reduce using rule 30 (Rvalue -> Mag .)
    XKHY            reduce using rule 30 (Rvalue -> Mag .)
    ADD             shift and go to state 55
    SUB             shift and go to state 56


state 35

    (45) Factor -> ADD . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    IDENT           shift and go to state 58
    NUMBER          shift and go to state 39

    Factor                         shift and go to state 57

state 36

    (39) Mag -> Term .
    (40) Term -> Term . MUL Factor
    (41) Term -> Term . DIV Factor

    ADD             reduce using rule 39 (Mag -> Term .)
    SUB             reduce using rule 39 (Mag -> Term .)
    EQ              reduce using rule 39 (Mag -> Term .)
    LT              reduce using rule 39 (Mag -> Term .)
    GT              reduce using rule 39 (Mag -> Term .)
    LE              reduce using rule 39 (Mag -> Term .)
    GE              reduce using rule 39 (Mag -> Term .)
    NE              reduce using rule 39 (Mag -> Term .)
    SEMI            reduce using rule 39 (Mag -> Term .)
    XKHY            reduce using rule 39 (Mag -> Term .)
    MUL             shift and go to state 59
    DIV             shift and go to state 60


state 37

    (44) Factor -> SUB . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    IDENT           shift and go to state 58
    NUMBER          shift and go to state 39

    Factor                         shift and go to state 61

state 38

    (42) Term -> Factor .

    MUL             reduce using rule 42 (Term -> Factor .)
    DIV             reduce using rule 42 (Term -> Factor .)
    ADD             reduce using rule 42 (Term -> Factor .)
    SUB             reduce using rule 42 (Term -> Factor .)
    EQ              reduce using rule 42 (Term -> Factor .)
    LT              reduce using rule 42 (Term -> Factor .)
    GT              reduce using rule 42 (Term -> Factor .)
    LE              reduce using rule 42 (Term -> Factor .)
    GE              reduce using rule 42 (Term -> Factor .)
    NE              reduce using rule 42 (Term -> Factor .)
    SEMI            reduce using rule 42 (Term -> Factor .)
    XKHY            reduce using rule 42 (Term -> Factor .)


state 39

    (47) Factor -> NUMBER .

    MUL             reduce using rule 47 (Factor -> NUMBER .)
    DIV             reduce using rule 47 (Factor -> NUMBER .)
    ADD             reduce using rule 47 (Factor -> NUMBER .)
    SUB             reduce using rule 47 (Factor -> NUMBER .)
    EQ              reduce using rule 47 (Factor -> NUMBER .)
    LT              reduce using rule 47 (Factor -> NUMBER .)
    GT              reduce using rule 47 (Factor -> NUMBER .)
    LE              reduce using rule 47 (Factor -> NUMBER .)
    GE              reduce using rule 47 (Factor -> NUMBER .)
    NE              reduce using rule 47 (Factor -> NUMBER .)
    SEMI            reduce using rule 47 (Factor -> NUMBER .)
    XKHY            reduce using rule 47 (Factor -> NUMBER .)


state 40

    (12) Stmt -> Expr SEMI .

    DKHY            reduce using rule 12 (Stmt -> Expr SEMI .)
    SEMI            reduce using rule 12 (Stmt -> Expr SEMI .)
    FOR             reduce using rule 12 (Stmt -> Expr SEMI .)
    WHILE           reduce using rule 12 (Stmt -> Expr SEMI .)
    IDENT           reduce using rule 12 (Stmt -> Expr SEMI .)
    IF              reduce using rule 12 (Stmt -> Expr SEMI .)
    DKHZ            reduce using rule 12 (Stmt -> Expr SEMI .)
    INT             reduce using rule 12 (Stmt -> Expr SEMI .)
    XKHZ            reduce using rule 12 (Stmt -> Expr SEMI .)
    SUB             reduce using rule 12 (Stmt -> Expr SEMI .)
    ADD             reduce using rule 12 (Stmt -> Expr SEMI .)
    NUMBER          reduce using rule 12 (Stmt -> Expr SEMI .)
    ELSE            reduce using rule 12 (Stmt -> Expr SEMI .)


state 41

    (17) ForStmt -> FOR XKHZ . OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt
    (18) OptExpr -> . Expr
    (19) OptExpr -> .
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    SEMI            reduce using rule 19 (OptExpr -> .)
    IDENT           shift and go to state 30
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    OptExpr                        shift and go to state 62
    Expr                           shift and go to state 63
    Rvalue                         shift and go to state 31
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 42

    (43) Factor -> XKHZ Expr . XKHY

    XKHY            shift and go to state 64


state 43

    (20) WhileStmt -> WHILE XKHZ . Expr XKHY Stmt
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    IDENT           shift and go to state 30
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    Expr                           shift and go to state 65
    Rvalue                         shift and go to state 31
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 44

    (27) Expr -> IDENT ASSIGN . Expr
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    IDENT           shift and go to state 30
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    Expr                           shift and go to state 66
    Rvalue                         shift and go to state 31
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 45

    (29) Rvalue -> Rvalue Compare . Mag
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    IDENT           shift and go to state 58
    NUMBER          shift and go to state 39

    Mag                            shift and go to state 67
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 46

    (31) Compare -> EQ .

    XKHZ            reduce using rule 31 (Compare -> EQ .)
    SUB             reduce using rule 31 (Compare -> EQ .)
    ADD             reduce using rule 31 (Compare -> EQ .)
    IDENT           reduce using rule 31 (Compare -> EQ .)
    NUMBER          reduce using rule 31 (Compare -> EQ .)


state 47

    (32) Compare -> LT .

    XKHZ            reduce using rule 32 (Compare -> LT .)
    SUB             reduce using rule 32 (Compare -> LT .)
    ADD             reduce using rule 32 (Compare -> LT .)
    IDENT           reduce using rule 32 (Compare -> LT .)
    NUMBER          reduce using rule 32 (Compare -> LT .)


state 48

    (33) Compare -> GT .

    XKHZ            reduce using rule 33 (Compare -> GT .)
    SUB             reduce using rule 33 (Compare -> GT .)
    ADD             reduce using rule 33 (Compare -> GT .)
    IDENT           reduce using rule 33 (Compare -> GT .)
    NUMBER          reduce using rule 33 (Compare -> GT .)


state 49

    (34) Compare -> LE .

    XKHZ            reduce using rule 34 (Compare -> LE .)
    SUB             reduce using rule 34 (Compare -> LE .)
    ADD             reduce using rule 34 (Compare -> LE .)
    IDENT           reduce using rule 34 (Compare -> LE .)
    NUMBER          reduce using rule 34 (Compare -> LE .)


state 50

    (35) Compare -> GE .

    XKHZ            reduce using rule 35 (Compare -> GE .)
    SUB             reduce using rule 35 (Compare -> GE .)
    ADD             reduce using rule 35 (Compare -> GE .)
    IDENT           reduce using rule 35 (Compare -> GE .)
    NUMBER          reduce using rule 35 (Compare -> GE .)


state 51

    (36) Compare -> NE .

    XKHZ            reduce using rule 36 (Compare -> NE .)
    SUB             reduce using rule 36 (Compare -> NE .)
    ADD             reduce using rule 36 (Compare -> NE .)
    IDENT           reduce using rule 36 (Compare -> NE .)
    NUMBER          reduce using rule 36 (Compare -> NE .)


state 52

    (21) IfStmt -> IF XKHZ . Expr XKHY Stmt ElsePart
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    IDENT           shift and go to state 30
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    Expr                           shift and go to state 68
    Rvalue                         shift and go to state 31
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 53

    (6) Declaration -> Type IdentList . SEMI
    (8) IdentList -> IdentList . COMMA IDENT

    SEMI            shift and go to state 69
    COMMA           shift and go to state 70


state 54

    (9) IdentList -> IDENT .

    SEMI            reduce using rule 9 (IdentList -> IDENT .)
    COMMA           reduce using rule 9 (IdentList -> IDENT .)


state 55

    (37) Mag -> Mag ADD . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    IDENT           shift and go to state 58
    NUMBER          shift and go to state 39

    Term                           shift and go to state 71
    Factor                         shift and go to state 38

state 56

    (38) Mag -> Mag SUB . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    IDENT           shift and go to state 58
    NUMBER          shift and go to state 39

    Term                           shift and go to state 72
    Factor                         shift and go to state 38

state 57

    (45) Factor -> ADD Factor .

    MUL             reduce using rule 45 (Factor -> ADD Factor .)
    DIV             reduce using rule 45 (Factor -> ADD Factor .)
    ADD             reduce using rule 45 (Factor -> ADD Factor .)
    SUB             reduce using rule 45 (Factor -> ADD Factor .)
    EQ              reduce using rule 45 (Factor -> ADD Factor .)
    LT              reduce using rule 45 (Factor -> ADD Factor .)
    GT              reduce using rule 45 (Factor -> ADD Factor .)
    LE              reduce using rule 45 (Factor -> ADD Factor .)
    GE              reduce using rule 45 (Factor -> ADD Factor .)
    NE              reduce using rule 45 (Factor -> ADD Factor .)
    SEMI            reduce using rule 45 (Factor -> ADD Factor .)
    XKHY            reduce using rule 45 (Factor -> ADD Factor .)


state 58

    (46) Factor -> IDENT .

    MUL             reduce using rule 46 (Factor -> IDENT .)
    DIV             reduce using rule 46 (Factor -> IDENT .)
    ADD             reduce using rule 46 (Factor -> IDENT .)
    SUB             reduce using rule 46 (Factor -> IDENT .)
    EQ              reduce using rule 46 (Factor -> IDENT .)
    LT              reduce using rule 46 (Factor -> IDENT .)
    GT              reduce using rule 46 (Factor -> IDENT .)
    LE              reduce using rule 46 (Factor -> IDENT .)
    GE              reduce using rule 46 (Factor -> IDENT .)
    NE              reduce using rule 46 (Factor -> IDENT .)
    SEMI            reduce using rule 46 (Factor -> IDENT .)
    XKHY            reduce using rule 46 (Factor -> IDENT .)


state 59

    (40) Term -> Term MUL . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    IDENT           shift and go to state 58
    NUMBER          shift and go to state 39

    Factor                         shift and go to state 73

state 60

    (41) Term -> Term DIV . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    IDENT           shift and go to state 58
    NUMBER          shift and go to state 39

    Factor                         shift and go to state 74

state 61

    (44) Factor -> SUB Factor .

    MUL             reduce using rule 44 (Factor -> SUB Factor .)
    DIV             reduce using rule 44 (Factor -> SUB Factor .)
    ADD             reduce using rule 44 (Factor -> SUB Factor .)
    SUB             reduce using rule 44 (Factor -> SUB Factor .)
    EQ              reduce using rule 44 (Factor -> SUB Factor .)
    LT              reduce using rule 44 (Factor -> SUB Factor .)
    GT              reduce using rule 44 (Factor -> SUB Factor .)
    LE              reduce using rule 44 (Factor -> SUB Factor .)
    GE              reduce using rule 44 (Factor -> SUB Factor .)
    NE              reduce using rule 44 (Factor -> SUB Factor .)
    SEMI            reduce using rule 44 (Factor -> SUB Factor .)
    XKHY            reduce using rule 44 (Factor -> SUB Factor .)


state 62

    (17) ForStmt -> FOR XKHZ OptExpr . SEMI OptExpr SEMI OptExpr XKHY Stmt

    SEMI            shift and go to state 75


state 63

    (18) OptExpr -> Expr .

    SEMI            reduce using rule 18 (OptExpr -> Expr .)
    XKHY            reduce using rule 18 (OptExpr -> Expr .)


state 64

    (43) Factor -> XKHZ Expr XKHY .

    MUL             reduce using rule 43 (Factor -> XKHZ Expr XKHY .)
    DIV             reduce using rule 43 (Factor -> XKHZ Expr XKHY .)
    ADD             reduce using rule 43 (Factor -> XKHZ Expr XKHY .)
    SUB             reduce using rule 43 (Factor -> XKHZ Expr XKHY .)
    EQ              reduce using rule 43 (Factor -> XKHZ Expr XKHY .)
    LT              reduce using rule 43 (Factor -> XKHZ Expr XKHY .)
    GT              reduce using rule 43 (Factor -> XKHZ Expr XKHY .)
    LE              reduce using rule 43 (Factor -> XKHZ Expr XKHY .)
    GE              reduce using rule 43 (Factor -> XKHZ Expr XKHY .)
    NE              reduce using rule 43 (Factor -> XKHZ Expr XKHY .)
    SEMI            reduce using rule 43 (Factor -> XKHZ Expr XKHY .)
    XKHY            reduce using rule 43 (Factor -> XKHZ Expr XKHY .)


state 65

    (20) WhileStmt -> WHILE XKHZ Expr . XKHY Stmt

    XKHY            shift and go to state 76


state 66

    (27) Expr -> IDENT ASSIGN Expr .

    SEMI            reduce using rule 27 (Expr -> IDENT ASSIGN Expr .)
    XKHY            reduce using rule 27 (Expr -> IDENT ASSIGN Expr .)


state 67

    (29) Rvalue -> Rvalue Compare Mag .
    (37) Mag -> Mag . ADD Term
    (38) Mag -> Mag . SUB Term

    EQ              reduce using rule 29 (Rvalue -> Rvalue Compare Mag .)
    LT              reduce using rule 29 (Rvalue -> Rvalue Compare Mag .)
    GT              reduce using rule 29 (Rvalue -> Rvalue Compare Mag .)
    LE              reduce using rule 29 (Rvalue -> Rvalue Compare Mag .)
    GE              reduce using rule 29 (Rvalue -> Rvalue Compare Mag .)
    NE              reduce using rule 29 (Rvalue -> Rvalue Compare Mag .)
    SEMI            reduce using rule 29 (Rvalue -> Rvalue Compare Mag .)
    XKHY            reduce using rule 29 (Rvalue -> Rvalue Compare Mag .)
    ADD             shift and go to state 55
    SUB             shift and go to state 56


state 68

    (21) IfStmt -> IF XKHZ Expr . XKHY Stmt ElsePart

    XKHY            shift and go to state 77


state 69

    (6) Declaration -> Type IdentList SEMI .

    DKHY            reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    SEMI            reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    FOR             reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    WHILE           reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    IDENT           reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    IF              reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    DKHZ            reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    INT             reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    XKHZ            reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    SUB             reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    ADD             reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    NUMBER          reduce using rule 6 (Declaration -> Type IdentList SEMI .)
    ELSE            reduce using rule 6 (Declaration -> Type IdentList SEMI .)


state 70

    (8) IdentList -> IdentList COMMA . IDENT

    IDENT           shift and go to state 78


state 71

    (37) Mag -> Mag ADD Term .
    (40) Term -> Term . MUL Factor
    (41) Term -> Term . DIV Factor

    ADD             reduce using rule 37 (Mag -> Mag ADD Term .)
    SUB             reduce using rule 37 (Mag -> Mag ADD Term .)
    EQ              reduce using rule 37 (Mag -> Mag ADD Term .)
    LT              reduce using rule 37 (Mag -> Mag ADD Term .)
    GT              reduce using rule 37 (Mag -> Mag ADD Term .)
    LE              reduce using rule 37 (Mag -> Mag ADD Term .)
    GE              reduce using rule 37 (Mag -> Mag ADD Term .)
    NE              reduce using rule 37 (Mag -> Mag ADD Term .)
    SEMI            reduce using rule 37 (Mag -> Mag ADD Term .)
    XKHY            reduce using rule 37 (Mag -> Mag ADD Term .)
    MUL             shift and go to state 59
    DIV             shift and go to state 60


state 72

    (38) Mag -> Mag SUB Term .
    (40) Term -> Term . MUL Factor
    (41) Term -> Term . DIV Factor

    ADD             reduce using rule 38 (Mag -> Mag SUB Term .)
    SUB             reduce using rule 38 (Mag -> Mag SUB Term .)
    EQ              reduce using rule 38 (Mag -> Mag SUB Term .)
    LT              reduce using rule 38 (Mag -> Mag SUB Term .)
    GT              reduce using rule 38 (Mag -> Mag SUB Term .)
    LE              reduce using rule 38 (Mag -> Mag SUB Term .)
    GE              reduce using rule 38 (Mag -> Mag SUB Term .)
    NE              reduce using rule 38 (Mag -> Mag SUB Term .)
    SEMI            reduce using rule 38 (Mag -> Mag SUB Term .)
    XKHY            reduce using rule 38 (Mag -> Mag SUB Term .)
    MUL             shift and go to state 59
    DIV             shift and go to state 60


state 73

    (40) Term -> Term MUL Factor .

    MUL             reduce using rule 40 (Term -> Term MUL Factor .)
    DIV             reduce using rule 40 (Term -> Term MUL Factor .)
    ADD             reduce using rule 40 (Term -> Term MUL Factor .)
    SUB             reduce using rule 40 (Term -> Term MUL Factor .)
    EQ              reduce using rule 40 (Term -> Term MUL Factor .)
    LT              reduce using rule 40 (Term -> Term MUL Factor .)
    GT              reduce using rule 40 (Term -> Term MUL Factor .)
    LE              reduce using rule 40 (Term -> Term MUL Factor .)
    GE              reduce using rule 40 (Term -> Term MUL Factor .)
    NE              reduce using rule 40 (Term -> Term MUL Factor .)
    SEMI            reduce using rule 40 (Term -> Term MUL Factor .)
    XKHY            reduce using rule 40 (Term -> Term MUL Factor .)


state 74

    (41) Term -> Term DIV Factor .

    MUL             reduce using rule 41 (Term -> Term DIV Factor .)
    DIV             reduce using rule 41 (Term -> Term DIV Factor .)
    ADD             reduce using rule 41 (Term -> Term DIV Factor .)
    SUB             reduce using rule 41 (Term -> Term DIV Factor .)
    EQ              reduce using rule 41 (Term -> Term DIV Factor .)
    LT              reduce using rule 41 (Term -> Term DIV Factor .)
    GT              reduce using rule 41 (Term -> Term DIV Factor .)
    LE              reduce using rule 41 (Term -> Term DIV Factor .)
    GE              reduce using rule 41 (Term -> Term DIV Factor .)
    NE              reduce using rule 41 (Term -> Term DIV Factor .)
    SEMI            reduce using rule 41 (Term -> Term DIV Factor .)
    XKHY            reduce using rule 41 (Term -> Term DIV Factor .)


state 75

    (17) ForStmt -> FOR XKHZ OptExpr SEMI . OptExpr SEMI OptExpr XKHY Stmt
    (18) OptExpr -> . Expr
    (19) OptExpr -> .
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    SEMI            reduce using rule 19 (OptExpr -> .)
    IDENT           shift and go to state 30
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    OptExpr                        shift and go to state 79
    Expr                           shift and go to state 63
    Rvalue                         shift and go to state 31
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 76

    (20) WhileStmt -> WHILE XKHZ Expr XKHY . Stmt
    (10) Stmt -> . ForStmt
    (11) Stmt -> . WhileStmt
    (12) Stmt -> . Expr SEMI
    (13) Stmt -> . IfStmt
    (14) Stmt -> . CompoundStmt
    (15) Stmt -> . Declaration
    (16) Stmt -> . SEMI
    (17) ForStmt -> . FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt
    (20) WhileStmt -> . WHILE XKHZ Expr XKHY Stmt
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (21) IfStmt -> . IF XKHZ Expr XKHY Stmt ElsePart
    (24) CompoundStmt -> . DKHZ StmtList DKHY
    (6) Declaration -> . Type IdentList SEMI
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (7) Type -> . INT
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    SEMI            shift and go to state 23
    FOR             shift and go to state 27
    WHILE           shift and go to state 29
    IDENT           shift and go to state 30
    IF              shift and go to state 32
    DKHZ            shift and go to state 12
    INT             shift and go to state 3
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    Expr                           shift and go to state 22
    Stmt                           shift and go to state 80
    ForStmt                        shift and go to state 20
    WhileStmt                      shift and go to state 21
    IfStmt                         shift and go to state 24
    CompoundStmt                   shift and go to state 25
    Declaration                    shift and go to state 26
    Rvalue                         shift and go to state 31
    Type                           shift and go to state 33
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 77

    (21) IfStmt -> IF XKHZ Expr XKHY . Stmt ElsePart
    (10) Stmt -> . ForStmt
    (11) Stmt -> . WhileStmt
    (12) Stmt -> . Expr SEMI
    (13) Stmt -> . IfStmt
    (14) Stmt -> . CompoundStmt
    (15) Stmt -> . Declaration
    (16) Stmt -> . SEMI
    (17) ForStmt -> . FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt
    (20) WhileStmt -> . WHILE XKHZ Expr XKHY Stmt
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (21) IfStmt -> . IF XKHZ Expr XKHY Stmt ElsePart
    (24) CompoundStmt -> . DKHZ StmtList DKHY
    (6) Declaration -> . Type IdentList SEMI
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (7) Type -> . INT
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    SEMI            shift and go to state 23
    FOR             shift and go to state 27
    WHILE           shift and go to state 29
    IDENT           shift and go to state 30
    IF              shift and go to state 32
    DKHZ            shift and go to state 12
    INT             shift and go to state 3
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    Expr                           shift and go to state 22
    Stmt                           shift and go to state 81
    ForStmt                        shift and go to state 20
    WhileStmt                      shift and go to state 21
    IfStmt                         shift and go to state 24
    CompoundStmt                   shift and go to state 25
    Declaration                    shift and go to state 26
    Rvalue                         shift and go to state 31
    Type                           shift and go to state 33
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 78

    (8) IdentList -> IdentList COMMA IDENT .

    SEMI            reduce using rule 8 (IdentList -> IdentList COMMA IDENT .)
    COMMA           reduce using rule 8 (IdentList -> IdentList COMMA IDENT .)


state 79

    (17) ForStmt -> FOR XKHZ OptExpr SEMI OptExpr . SEMI OptExpr XKHY Stmt

    SEMI            shift and go to state 82


state 80

    (20) WhileStmt -> WHILE XKHZ Expr XKHY Stmt .

    DKHY            reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    SEMI            reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    FOR             reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    WHILE           reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    IDENT           reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    IF              reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    DKHZ            reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    INT             reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    XKHZ            reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    SUB             reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    ADD             reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    NUMBER          reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)
    ELSE            reduce using rule 20 (WhileStmt -> WHILE XKHZ Expr XKHY Stmt .)


state 81

    (21) IfStmt -> IF XKHZ Expr XKHY Stmt . ElsePart
    (22) ElsePart -> . ELSE Stmt
    (23) ElsePart -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 84
    DKHY            reduce using rule 23 (ElsePart -> .)
    SEMI            reduce using rule 23 (ElsePart -> .)
    FOR             reduce using rule 23 (ElsePart -> .)
    WHILE           reduce using rule 23 (ElsePart -> .)
    IDENT           reduce using rule 23 (ElsePart -> .)
    IF              reduce using rule 23 (ElsePart -> .)
    DKHZ            reduce using rule 23 (ElsePart -> .)
    INT             reduce using rule 23 (ElsePart -> .)
    XKHZ            reduce using rule 23 (ElsePart -> .)
    SUB             reduce using rule 23 (ElsePart -> .)
    ADD             reduce using rule 23 (ElsePart -> .)
    NUMBER          reduce using rule 23 (ElsePart -> .)

  ! ELSE            [ reduce using rule 23 (ElsePart -> .) ]

    ElsePart                       shift and go to state 83

state 82

    (17) ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI . OptExpr XKHY Stmt
    (18) OptExpr -> . Expr
    (19) OptExpr -> .
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    XKHY            reduce using rule 19 (OptExpr -> .)
    IDENT           shift and go to state 30
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    OptExpr                        shift and go to state 85
    Expr                           shift and go to state 63
    Rvalue                         shift and go to state 31
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 83

    (21) IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .

    DKHY            reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    SEMI            reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    FOR             reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    WHILE           reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    IDENT           reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    IF              reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    DKHZ            reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    INT             reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    XKHZ            reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    SUB             reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    ADD             reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    NUMBER          reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)
    ELSE            reduce using rule 21 (IfStmt -> IF XKHZ Expr XKHY Stmt ElsePart .)


state 84

    (22) ElsePart -> ELSE . Stmt
    (10) Stmt -> . ForStmt
    (11) Stmt -> . WhileStmt
    (12) Stmt -> . Expr SEMI
    (13) Stmt -> . IfStmt
    (14) Stmt -> . CompoundStmt
    (15) Stmt -> . Declaration
    (16) Stmt -> . SEMI
    (17) ForStmt -> . FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt
    (20) WhileStmt -> . WHILE XKHZ Expr XKHY Stmt
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (21) IfStmt -> . IF XKHZ Expr XKHY Stmt ElsePart
    (24) CompoundStmt -> . DKHZ StmtList DKHY
    (6) Declaration -> . Type IdentList SEMI
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (7) Type -> . INT
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    SEMI            shift and go to state 23
    FOR             shift and go to state 27
    WHILE           shift and go to state 29
    IDENT           shift and go to state 30
    IF              shift and go to state 32
    DKHZ            shift and go to state 12
    INT             shift and go to state 3
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    Stmt                           shift and go to state 86
    ForStmt                        shift and go to state 20
    WhileStmt                      shift and go to state 21
    Expr                           shift and go to state 22
    IfStmt                         shift and go to state 24
    CompoundStmt                   shift and go to state 25
    Declaration                    shift and go to state 26
    Rvalue                         shift and go to state 31
    Type                           shift and go to state 33
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 85

    (17) ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr . XKHY Stmt

    XKHY            shift and go to state 87


state 86

    (22) ElsePart -> ELSE Stmt .

    DKHY            reduce using rule 22 (ElsePart -> ELSE Stmt .)
    SEMI            reduce using rule 22 (ElsePart -> ELSE Stmt .)
    FOR             reduce using rule 22 (ElsePart -> ELSE Stmt .)
    WHILE           reduce using rule 22 (ElsePart -> ELSE Stmt .)
    IDENT           reduce using rule 22 (ElsePart -> ELSE Stmt .)
    IF              reduce using rule 22 (ElsePart -> ELSE Stmt .)
    DKHZ            reduce using rule 22 (ElsePart -> ELSE Stmt .)
    INT             reduce using rule 22 (ElsePart -> ELSE Stmt .)
    XKHZ            reduce using rule 22 (ElsePart -> ELSE Stmt .)
    SUB             reduce using rule 22 (ElsePart -> ELSE Stmt .)
    ADD             reduce using rule 22 (ElsePart -> ELSE Stmt .)
    NUMBER          reduce using rule 22 (ElsePart -> ELSE Stmt .)
    ELSE            reduce using rule 22 (ElsePart -> ELSE Stmt .)


state 87

    (17) ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY . Stmt
    (10) Stmt -> . ForStmt
    (11) Stmt -> . WhileStmt
    (12) Stmt -> . Expr SEMI
    (13) Stmt -> . IfStmt
    (14) Stmt -> . CompoundStmt
    (15) Stmt -> . Declaration
    (16) Stmt -> . SEMI
    (17) ForStmt -> . FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt
    (20) WhileStmt -> . WHILE XKHZ Expr XKHY Stmt
    (27) Expr -> . IDENT ASSIGN Expr
    (28) Expr -> . Rvalue
    (21) IfStmt -> . IF XKHZ Expr XKHY Stmt ElsePart
    (24) CompoundStmt -> . DKHZ StmtList DKHY
    (6) Declaration -> . Type IdentList SEMI
    (29) Rvalue -> . Rvalue Compare Mag
    (30) Rvalue -> . Mag
    (7) Type -> . INT
    (37) Mag -> . Mag ADD Term
    (38) Mag -> . Mag SUB Term
    (39) Mag -> . Term
    (40) Term -> . Term MUL Factor
    (41) Term -> . Term DIV Factor
    (42) Term -> . Factor
    (43) Factor -> . XKHZ Expr XKHY
    (44) Factor -> . SUB Factor
    (45) Factor -> . ADD Factor
    (46) Factor -> . IDENT
    (47) Factor -> . NUMBER

    SEMI            shift and go to state 23
    FOR             shift and go to state 27
    WHILE           shift and go to state 29
    IDENT           shift and go to state 30
    IF              shift and go to state 32
    DKHZ            shift and go to state 12
    INT             shift and go to state 3
    XKHZ            shift and go to state 28
    SUB             shift and go to state 37
    ADD             shift and go to state 35
    NUMBER          shift and go to state 39

    Stmt                           shift and go to state 88
    ForStmt                        shift and go to state 20
    WhileStmt                      shift and go to state 21
    Expr                           shift and go to state 22
    IfStmt                         shift and go to state 24
    CompoundStmt                   shift and go to state 25
    Declaration                    shift and go to state 26
    Rvalue                         shift and go to state 31
    Type                           shift and go to state 33
    Mag                            shift and go to state 34
    Term                           shift and go to state 36
    Factor                         shift and go to state 38

state 88

    (17) ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .

    DKHY            reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    SEMI            reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    FOR             reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    WHILE           reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    IDENT           reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    IF              reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    DKHZ            reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    INT             reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    XKHZ            reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    SUB             reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    ADD             reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    NUMBER          reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)
    ELSE            reduce using rule 17 (ForStmt -> FOR XKHZ OptExpr SEMI OptExpr SEMI OptExpr XKHY Stmt .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 81 resolved as shift
